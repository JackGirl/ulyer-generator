[{
  "_id": "vue2_elementUi",
  "type": "vue",
  "template": "<template>\n    <div class=\"app-container\">\n        <div>\n            <el-form ref=\"form\" :model=\"queryParams\" label-width=\"80px\" inline>\n                <#list columns as column>\n                     <#if column.javaType?contains('java.util.Date')>\n                    <el-form-item label=\"${column.comment!}\" prop=\"${column.propertyName}\">\n                        <el-date-picker\n                                size=\"small\"\n                                v-model=\"queryParams.${column.propertyName}\"\n                                type=\"datetime\"\n                                value-format=\"yyyy-MM-dd HH:mm:ss\"\n                                placeholder=\"选择日期时间\">\n                        </el-date-picker>\n                    </el-form-item>\n                    <#else>\n                        <el-form-item label=\"${column.comment!}\" prop=\"${column.propertyName}\">\n                            <el-input v-model=\"queryParams.${column.propertyName}\" size=\"small\"/>\n                        </el-form-item>\n                    </#if>\n                </#list>\n                \n                <el-form-item >\n                    <el-button type=\"primary\" @click=\"openAddForm('addForm')\" size=\"small\">添加</el-button>\n                    <el-button type=\"primary\" @click=\"getList\" size=\"small\">查询</el-button>\n                    <el-button type=\"primary\" @click=\"resetForm('form')\" size=\"small\">重置</el-button>\n                </el-form-item>\n            </el-form>\n        </div>\n\n        <div>\n            <el-table v-loading=\"tableLoading\"\n                      :data=\"tableData\"\n                      height=\"600\"\n                      border>\n                <el-table-column type=\"selection\"></el-table-column>\n                <#list columns as column>\n                    <el-table-column label=\"${column.comment!}\" prop=\"${column.propertyName}\"></el-table-column>\n                </#list>\n                <el-table-column label=\"操作\" >\n                    <template slot-scope=\"scope\">\n                            <el-button size=\"small\" type=\"text\" @click=\"openEdit(scope.row,'editForm')\" >编辑</el-button>\n                            <el-button size=\"small\" slot=\"reference\" @click=\"remove(scope.row)\"  type=\"text\">删除</el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n          <pagination v-show=\"pageObject.total>0\" :total=\"pageObject.total\" :page.sync=\"pageObject.current\" :limit.sync=\"pageObject.size\"\n                @pagination=\"getList\"/>\n        </div>\n\n        <!-- form  -->\n        <el-dialog title=\"添加\" :visible.sync=\"addFormVisible\" >\n            <el-form ref=\"addForm\" label-width=\"80\" :rules=\"addRules\" :model=\"addFormData\">\n                <#list columns as column>\n                    <#if column.javaType=='java.util.Date'>\n                        <el-form-item label=\"${column.comment!}\" prop=\"${column.propertyName}\">\n                            <el-date-picker\n                                    size=\"small\"\n                                    v-model=\"addFormData.${column.propertyName}\"\n                                    type=\"datetime\"\n                                    value-format=\"yyyy-MM-dd HH:mm:ss\"\n                                    placeholder=\"选择日期时间\">\n                            </el-date-picker>\n                        </el-form-item>\n                    <#else>\n                        <el-form-item label=\"${column.comment!}\" prop=\"${column.propertyName}\">\n                            <el-input v-model=\"addFormData.${column.propertyName}\" size=\"small\"/>\n                        </el-form-item>\n                    </#if>\n                </#list>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button type=\"primary\" @click=\"create('addForm')\">确 定</el-button>\n            </div>\n        </el-dialog>\n\n        <el-dialog title=\"修改\" :visible.sync=\"editFormVisible\" >\n            <el-form ref=\"editForm\" label-width=\"80\" :rules=\"editRules\" :model=\"editFormData\">\n                  <#list columns as column>\n                    <#if column.javaType=='java.util.Date'>\n                        <el-form-item label=\"${column.comment!}\" prop=\"${column.propertyName}\">\n                            <el-date-picker\n                                    size=\"small\"\n                                    v-model=\"addFormData.${column.propertyName}\"\n                                    type=\"datetime\"\n                                    value-format=\"yyyy-MM-dd HH:mm:ss\"\n                                    placeholder=\"选择日期时间\">\n                            </el-date-picker>\n                        </el-form-item>\n                    <#else>\n                        <el-form-item label=\"${column.comment!}\" prop=\"${column.propertyName}\">\n                            <el-input v-model=\"addFormData.${column.propertyName}\" size=\"small\"/>\n                        </el-form-item>\n                    </#if>\n                </#list>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button type=\"primary\" @click=\"update('editForm')\">确 定</el-button>\n            </div>\n        </el-dialog>\n\n\n\n    </div>\n</template>\n\n<script>\n    import {pageData, create, update, removeById,getOne} from \"@/api/${table.className}\";\n\n\n    export default {\n        name: \"${table.className}\",\n        data() {\n            return {\n                queryParams:{\n                \t<#list columns as column>\n                    ${column.propertyName}:undefined,\n                    </#list>\n                },\n               tableLoading:false,\n               tableData:[],\n               pageObject:{\n               \tcurrent:1,\n                size:10,\n                total:0\n               },\n               addFormVisible:false,\n               editFormVisible:false,\n               addFormData:{\n               <#list columns as column>\n                    ${column.propertyName}:undefined,\n                    </#list>\n               },\n               addRules:{\n               <#list columns as column>\n                    <#if !column.nullable>\n                   \t${column.propertyName}:[{required:true,message:'${column.comment}'||'必填'}],\n                   </#if>\n                </#list>\n               },\n               editFormData:{\n               <#list columns as column>\n                    ${column.propertyName}:undefined,\n                    </#list>\n               },\n               editRules:{\n                 <#list columns as column>\n                 \t<#if !column.nullable>\n                   \t${column.propertyName}:[{required:true,message:'${column.comment}'||'必填'}],\n                   </#if>\n                </#list>\n               }\n            }  \n        },\n        mounted() {\n        \tthis.getList()\n        },\n        methods: {\n            getList(pagination) {\n                 if (pagination) {\n        \t\t\tthis.pageObject.current = pagination.page || this.pageObject.current;\n        \t\t\tthis.pageObject.size = pagination.limit || this.pageObject.size;\n      \t\t\t }\n                this.tableLoading = true;\n                pageData({...this.pageObject, ...this.queryParams}).then(res => {\n                    this.pageObject.total = res.data.total;\n                    this.tableData = res.data.records;\n                    this.tableLoading = false;\n                })\n            },\n            openEdit(row,formRef){\n                this.editFormVisible = true;\n                this.resetForm(formRef)\n                Object.keys(this.editFormData).forEach(key =>{\n                    this.editFormData[key] = row[key]\n                })\n                \n            },\n            openAddForm(formRef){\n                this.addFormVisible = true\n            \tthis.resetForm(formRef)\n            },\n            update(formName){\n                this.$refs[formName].validate((valid)=>{\n                \tif(valid){\n                    \tupdate(this.editFormData).then(res=>{\n                             this.$notify.success('修改成功')\n\t\t\t\t\t\t\t this.getList()\n                        })\n                    }\n                })\n    \t\t},\n            create(formName){\n                 this.$refs[formName].validate((valid)=>{\n                \tif(valid){\n                    \tcreate(this.addFormDate).then(res=>{\n                        \tthis.$notify.success('添加成功')\n\t\t\t\t\t\t\tthis.getList()\n                        })\n                    }\n                })\n            },\n            remove(row){\n              this.$confirm('删除此条记录?', '提示', {\n       \t\t\t\t confirmButtonText: '确定',\n       \t\t\t\t cancelButtonText: '取消',\n        \t\t\t type: 'danger'\n      \t\t\t}).then((res) => {\n                  \tthis.$message.success('删除成功')\n        \t\t\tthis.getList()\n      \t\t\t})\n            }\n\n\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n",
  "nameExpression": "#{table.getClassName()}/index",
  "_class": "cn.ulyer.generator.model.GenTemplate"
},{
  "_id": "vue_axios",
  "type": "js",
  "template": "import request from \"@/utils/request\";\n\n// 分页\nexport function pageData(params){\n    return request({\n        url:'/${table.className}Rest/page',\n        method:'get',\n        params\n    })\n}\n\nexport function create(data){\n    return request({\n        url:'/${table.className}Rest/create',\n        method:'post',\n        data\n    })\n}\n\n\nexport function update(data){\n\treturn request({\n\t\turl:'/${table.className}Rest/update',\n\t\tmethod:'put',\n\t\tdata\n\t})\n}\n\nexport function getOne(id){\n\treturn request({\n    \turl:`/${table.className}Rest/get/<#noparse>${id}</#noparse>`\n    })\n}\n\nexport function removeById(id){\n\treturn request({\n\t\turl:`/${table.className}Rest/remove?<#noparse>id=\\${id}</#noparse>`,\n\t\tmethod:'delete',\n\t})\n}\n\n",
  "nameExpression": "api/#{table.className}",
  "_class": "cn.ulyer.generator.model.GenTemplate"
},{
  "_id": "mybatis_plus_mapper",
  "type": "java",
  "template": "package ${basePackage}.repository;\n\nimport ${basePackage}.entity.${table.className};\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\n\npublic interface ${table.className}Mapper extends BaseMapper<${table.className}> {\n}\n",
  "nameExpression": "mapper/#{table.getClassName()}Mapper",
  "_class": "cn.ulyer.generator.model.GenTemplate"
},{
  "_id": "mybatis_plus_service",
  "type": "java",
  "template": "package ${basePackage}.service;\n\nimport ${basePackage}.entity.${table.className};\nimport com.baomidou.mybatisplus.extension.service.IService;\n/**\n * author: ${author}\n * date: ${.now?string('yyyy-MM-dd')}\n */\npublic interface ${table.className}Service extends IService<${table.className}> {\n}\n",
  "nameExpression": "service/#{table.getClassName()}Service",
  "_class": "cn.ulyer.generator.model.GenTemplate"
},{
  "_id": "mybatis_plus_serviceImpl",
  "type": "java",
  "template": "package ${basePackage}.service.impl;\n\nimport ${basePackage}.entity.${table.className};\nimport ${basePackage}.service.${table.className}Service;\nimport org.springframework.stereotype.Service;\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport ${basePackage}.mapper.${table.className}Mapper;\n\n/**\n * author: ${author}\n * date: ${.now?string('yyyy-MM-dd')}\n */\n@Service\npublic class ${table.className}ServiceImpl extends ServiceImpl<${table.className}Mapper,${table.className}> implements ${table.className}Service {\n\n\n}\n",
  "nameExpression": "service/impl/#{table.getClassName()}ServiceImpl",
  "_class": "cn.ulyer.generator.model.GenTemplate"
},{
  "_id": "mybatis_xml",
  "type": "xml",
  "template": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"${basePackage}.mapper.${table.className}Mapper\">\n\n    <resultMap type=\"${table.className}\" id=\"${table.className}Result\">\n        <#list columns as column>\n            <result property=\"${column.propertyName}\" column=\"${column.name}\"/>\n        </#list>\n    </resultMap>\n\n    \n</mapper>",
  "nameExpression": "mapper/#{table.getClassName()}Mapper",
  "_class": "cn.ulyer.generator.model.GenTemplate"
},{
  "_id": "mybatis_plus_entity",
  "type": "java",
  "template": "package ${basePackage}.entity;\n\nimport lombok.Getter;\nimport lombok.Setter;\nimport java.io.Serializable;\nimport com.baomidou.mybatisplus.annotation.TableName;\n<#list columns as c1>\n        <#list columns as c2>\n                <#if c1.javaType ==c2.javaType>\n                    <#if c1_index==c2_index>\n     \t\t\t\t\t<#if c1.javaType=='java.lang.Date'>\nimport org.springframework.format.annotation.DateTimeFormat;\nimport com.fasterxml.jackson.annotation.JsonFormart;\n    \t\t\t\t\t</#if>\n\t\t\t\t\t\t<#if c1.javaType?contains('java.lang')>\n    \t\t\t\t\t<#else>\nimport ${c1.javaType};\n    \t\t\t\t\t</#if>\n    \t\t\t\t\t<#if c1.uniqueId>\nimport com.baomidou.mybatisplus.annotation.TableId;                        \n                        </#if>\n                    <#else>\n                        <#break >\n                    </#if>\n                </#if>\n        </#list>\n</#list>\n\n\n\n\n/**\n * 实体表:${table.tableName} ${table.comment}\n * author ${author}\n * date: ${.now?string('yyyy-MM-dd')}\n */\n@TableName( \"${table.tableName}\" )\n@Getter\n@Setter\npublic class ${table.className} implements Serializable  {\n\n\n<#list columns as column>\n    \n    /**\n    * ${column.comment}\n    */\n    <#if column.uniqueId>\n    @TableId\n    </#if>\n    <#if column.javaType=='java.lanng.Date'>\n    @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\",timezone = \"GMT+8\")\n    @DateTimeFormat(pattern=\"yyyy-MM-dd HH:mm:ss\")\n    </#if>\n    private ${column.javaType?substring( (column.javaType?last_index_of('.'))+1)} ${column.propertyName};\n\n</#list>\n\n\n\n\n\n}\n",
  "nameExpression": "entity/#{table.getClassName()}",
  "_class": "cn.ulyer.generator.model.GenTemplate"
},{
  "_id": "mvc_rest",
  "type": "java",
  "template": "package ${basePackage}rest;\n\nimport ${basePackage}.entity.${table.className};\nimport cn.ulyer.common.utils.Result;\nimport ${basePackage}.service.${table.className}Service;\nimport com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;\nimport com.baomidou.mybatisplus.core.toolkit.Wrappers;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport javax.validation.Valid;\nimport  cn.hutool.core.util.ObjectUtil;\n\n\n\n/**\n * author: ${author}\n * date: ${.now?string('yyyy-MM-dd')}\n */\n@RestController\n@RequestMapping(\"/${table.className}Rest\")\npublic class ${table.className}Rest {\n\n    @Autowired\n    private ${table.className}Service ${table.className?uncap_first}Service;\n    <#assign serviceName=(table.className?uncap_first)+'Service'>\n\n\n    /**\n     * 分页\n     */\n    @GetMapping(\"/page\")\n    public Result page(Page<${table.className}> pager,${table.className} query){\n        LambdaQueryWrapper<${table.className}> wrapper = Wrappers.lambdaQuery();\n        <#list columns as column>\n            <#assign methodName='get'+(column.propertyName?cap_first)>\n\t\t\twrapper.eq(ObjectUtil.isNull(query.${methodName}()),${table.className}::${methodName},query.${methodName}());\n\t\t</#list>\n        pager =${serviceName}.page(pager,wrapper);\n        return Result.ok().data(pager);\n    }\n\n    @GetMapping(\"/get/{id}\")\n    public Result<${table.className}> detail(@PathVariable ${idType} id){\n        return Result.ok().data(${serviceName}.getById(id));\n    }\n\n    @PostMapping(\"/create\")\n    public Result create(@Valid @RequestBody ${table.className} model){\n       ${serviceName}.save(model);\n        return Result.ok();\n    }\n\n\n    @PutMapping(\"/update\")\n    public Result update(@RequestBody ${table.className} update){\n       ${serviceName}.updateById(update);\n        return Result.ok();\n    }\n\n    /**\n     * removeById\n     *\n     */\n    @DeleteMapping(\"/remove/{id}\")\n    public Result remove(@Pathvariable ${idType} id){\n        ${serviceName}.removeById(id);\n        return Result.ok();\n    }\n\n\n\n}\n",
  "nameExpression": "rest/#{table.getClassName()}Rest",
  "_class": "cn.ulyer.generator.model.GenTemplate"
}]